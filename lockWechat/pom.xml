<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.yishu</groupId>
  <artifactId>lockWechat</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>lockWechat Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <projet.reporting.outputEncoding>UTF-8</projet.reporting.outputEncoding>
    <project.build.directory>target</project.build.directory>
    <project.reporting.outputDirectory>target</project.reporting.outputDirectory>
    <jdk-version>1.7</jdk-version>
    <spring-version>4.2.6.RELEASE</spring-version>
    <struts2-version>2.5.12</struts2-version>
    <slf4j-version>1.7.12</slf4j-version>
    <log4j2-version>2.8.2</log4j2-version>
    <httpcomponents-version>4.2.5</httpcomponents-version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- 测试 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-junit-plugin</artifactId>
      <version>${struts2-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring-version}</version>
      <scope>test</scope>
    </dependency>

    <!-- http -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${httpcomponents-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${httpcomponents-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpcomponents-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient-cache</artifactId>
      <version>${httpcomponents-version}</version>
    </dependency>

    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <!--struts2-->
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-core</artifactId>
      <version>${struts2-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-spring-plugin</artifactId>
      <version>${struts2-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-json-plugin</artifactId>
      <version>${struts2-version}</version>
    </dependency>

    <!-- 旧日志转到slf4j的适配器 -->
    <dependency>
      <!-- JUL需要额外执行一行初始化代码SLF4JBridgeHandler.install();// jul to slf4j -->
      <!--JDK(java.util.logging简写JUL)生成的日志 转slf4j-->
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency>
    <dependency>
      <!--apache Jakarta Commons Logging API (JCL)转slf4j,spring-core使用的是JCL-->
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j-version}</version>
    </dependency>
    <dependency>
      <!--log4j1转slf4j-->
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j-version}</version>
    </dependency>

    <!-- log总接口(编程转换接口) -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-version}</version>
    </dependency>

    <!-- 从slf4j-api到log实现需要的转接 -->
    <!-- slf4j到log4j1的桥梁 -->
    <!--<dependency>-->
      <!--<groupId>org.slf4j</groupId>-->
      <!--<artifactId>slf4j-log4j12</artifactId>-->
      <!--<version>1.7.16</version>-->
    <!--</dependency>-->
    <!-- slf4j到log4j2的桥梁 -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j2-version}</version>
    </dependency>

    <!-- log最终输出的实现 -->
    <!-- logback -->
    <!--<dependency>-->
      <!--<groupId>ch.qos.logback</groupId>-->
      <!--<artifactId>logback-core</artifactId>-->
      <!--<version>1.1.2</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--&lt;!&ndash; logback实现了slf4j的API,从slf4j到logback-classic不需要再转接 &ndash;&gt;-->
      <!--<groupId>ch.qos.logback</groupId>-->
      <!--<artifactId>logback-classic</artifactId>-->
      <!--<version>1.1.2</version>-->
    <!--</dependency>-->
    <!-- log4j2 -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2-version}</version>
    </dependency>
    <!-- log4j1 -->
    <!--<dependency>-->
      <!--<groupId>log4j</groupId>-->
      <!--<artifactId>log4j</artifactId>-->
      <!--<version>1.2.17</version>-->
    <!--</dependency>-->

    <!-- DB -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.38</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.0.18</version>
    </dependency>

    <!--dom4j解析xml-->
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
    </dependency>

    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.3.1</version>
    </dependency>

    <!-- gson -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.6.2</version>
    </dependency>
    <!--jackson-databind 包含jackson-annotations,jackson-core-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.34</version>
    </dependency>
    <!--json-lib-->
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>2.4</version>
      <classifier>jdk15</classifier>
    </dependency>

    <!-- JWT(JSON web token)规范的一种开源实现,jjwt -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.7.0</version>
    </dependency>

    <dependency>
      <groupId>net.bull.javamelody</groupId>
      <artifactId>javamelody-core</artifactId>
      <version>1.69.0</version>
    </dependency>

    <!-- struts2-junit-plugin ver2.5.12 要求 servlet-api版本至少3.1.0+(实测3.0.1也行,没发现问题) -->
    <!-- servlet-api自3.0-alpha-1之后的版本artifactId由servlet-api变为javax.servlet-api -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- struts2-junit-plugin ver2.5.12 要求 jsp-api版本至少2.0+ -->
    <!-- jsp-api自2.0之后的版本groupId由javax.servlet变为javax.servlet.jsp -->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.2</version>
      <scope>provided</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.0</version>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <!--<scope>runtime</scope>-->
    </dependency>

  </dependencies>

  <profiles>
    <!-- 开发环境 -->
    <profile>
      <id>development</id>
      <properties>
        <profiles.active>development</profiles.active>
        <deploy.url>http://localhost:80/lockWechat</deploy.url>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <!-- 测试环境 -->
    <profile>
      <id>test</id>
      <properties>
        <profiles.active>test</profiles.active>
        <deploy.url>http://112.25.233.122:8000/lockWechat</deploy.url>
      </properties>
    </profile>
    <!-- 生产环境 -->
    <profile>
      <id>production</id>
      <properties>
        <profiles.active>production</profiles.active>
        <deploy.url>http://RemoteServer:port/lockWechat</deploy.url>
      </properties>
    </profile>
  </profiles>

  <build>
    <finalName>lockWechat</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
        <excludes>
          <exclude>config/production/jdbc.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>
      <!-- 添加额外的资源文件目录,过滤 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
        <executions>
          <execution>
            <id>copy-xmls</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/java</directory>
                  <includes>
                    <include>**/*.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 测试 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19</version>
        <configuration>
          <skipTests>true</skipTests>
          <parallel>methods</parallel><!-- 方法级并发 -->
          <threadCount>10</threadCount><!-- 线程数 -->
          <argLine>-Dfile.encoding=UTF-8</argLine><!-- 该插件依赖于操作系统的字符集 -->
          <skip>true</skip><!-- 忽略测试 -->
          <testFailureIgnore>true</testFailureIgnore><!-- 忽略测试异常 -->
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.19</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.2</version>
        <configuration>
          <source>${jdk-version}</source>
          <target>${jdk-version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
          <webResources>
            <resource>
              <directory>src/main/resources/config/${profiles.active}</directory>
              <!-- target不能以/结尾 -->
              <targetPath>WEB-INF/classes</targetPath>
              <filtering>true</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <port>80</port>
          <path>/lockWechat</path>
          <uriEncoding>UTF-8</uriEncoding>
          <url>${deploy.url}</url>
          <server>tomcat.server</server><!-- 在maven目录conf/setting.xml标签servers中定义 -->
          <finalName>lockWechat</finalName>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.0-M1</version>
        <!-- 配置导出配置 -->
        <configuration>
          <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
          <!--<reportOutputDirectory>${project.reporting.outputDirectory}</reportOutputDirectory>-->
          <outputDirectory>target\javadoc</outputDirectory>
          <reportOutputDirectory>target\javadoc</reportOutputDirectory>
          <show>private</show>
          <nohelp>true</nohelp>
          <bottom></bottom>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>site</phase>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
