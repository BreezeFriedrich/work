<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>

    <!-- package提供了将多个Action组织为一个模块的方式
        package的名字必须是唯一的 package可以扩展 当一个package扩展自
        另一个package时该package会在本身配置的基础上加入扩展的package
        的配置 父package必须在子package前配置
        abstract:设置package的属性为抽象的 抽象的package不能定义action 值true:false
        namespace:定义package命名空间 该命名空间影响到url的地址，例如此命名空间为/test那么访问是的地址为http://localhost:8080/struts2/test/XX.action
     -->
    <package name="account" namespace="/account" extends="default">

        <!-- Action配置 一个Action可以被多次映射(只要action配置中的name不同)
             method: 调用Action中的方法名
        -->
        <global-allowed-methods>login</global-allowed-methods>
        <action name="loginAccount" class="com.yishu.action.AccountAction" method="loginTest">
            <!-- 参数设置 name：对应Action中的get/set方法 -->
            <!--<param name="salt">yishutech</param>-->

            <!-- 引用拦截器 name:拦截器名称或拦截器栈名称 -->
            <!--<interceptor-ref name="monitor_Stack"/>-->
            <interceptor-ref name="defaultStack">
                <param name="exception.logEnabled">true</param>
                <param name="exception.logLevel">error</param>
            </interceptor-ref>

            <!-- 节点配置
                name : result名称 和Action中返回的值相同
                type : result类型 不写则选用superpackage的type struts-default.xml中的默认为dispatcher
             -->
            <!--<result name="JSON_RESULT" type="json"/>--><!-- 不配置param,将返回整个ValueStack 的json串-->
            <result name="JSON_RESULT" type="json">
                <!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
                <!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
                <param name="root">jsonMap</param>
                <!-- 指定是否序列化空的属性 -->
                <param name="excludeNullProperties">false</param>
                <!-- 这里指定将序列化dataMap中的那些属性 -->
                <!--<param name="includeProperties">userList.*</param>-->
                <!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
                <!--<param name="excludeProperties">SUCCESS</param>-->
            </result>
            <!--<result name="success">/WEB-INF/jsp/main.jsp</result>-->
            <result name="success">/jsp/main.jsp</result>
            <result name="login" type="dispatcher">/jsp/login.jsp</result>
        </action>
    </package>

</struts>